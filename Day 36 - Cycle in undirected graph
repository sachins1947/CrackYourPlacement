class Solution {
    // Function to detect cycle in an undirected graph.
    public boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj) {
      boolean vis[] = new boolean[V];
     for(int i=0;i<V;i++){
         if(!vis[i]){
      if(dfs(i,-1,adj,vis)==true)
         return true;
         }
     }
     return false;
    }
    boolean dfs(int node,int parent,ArrayList<ArrayList<Integer>> adj,boolean vis[]){
        vis[node]=true;
        for(Integer it : adj.get(node)){
              if(!vis[it]){
                  if(dfs(it,node,adj,vis)==true)
                  return true;
              }
           else if(it!=parent){
               return true;
           }
        }
        return false;
    }
}
