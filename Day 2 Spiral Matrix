class Solution {
    public List<Integer> spiralOrder(int[][] a) {
        ArrayList<Integer> list = new ArrayList<Integer>(); 
         int n = a.length;
         int m = a[0].length;
         int vis[][] = new int[n][m];
         for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                vis[i][j] =0;
            }
         }
    int size = n*m;
    int left= 0;
    int right = m-1;
    int bottom = n-1;
    int top = 0;
       while(left <= right && top <= bottom){
         int j =top;
         while(j<=right && vis[left][j]==0){
            list.add(a[left][j]);
            vis[left][j]= 1;
            j++;
         }
         left++;
         j=left;
         while(j<=bottom && vis[j][right]==0){
            list.add(a[j][right]);
            vis[j][right] =1;
            j++;
         }
         right--;
          j =right;
         while(j>=top &&  vis[bottom][j]==0){
            list.add(a[bottom][j]);
            vis[bottom][j]=1;
            j--;
         }
         bottom--;
          j =bottom;
          while(j>=left && vis[j][top]==0){
            list.add(a[j][top]);
            vis[j][top]=1;
            j--;
          }
          top++;
       } 
       return list;
    }
}
