class Solution {
    public int getMinimumDifference(TreeNode root) {
         ArrayList<Integer> list = new ArrayList<>();
         inorder(root,list);
         int min= Integer.MAX_VALUE;

        for(int i=0;i<list.size()-1;i++){
        min = Math.min(min,list.get(i+1)-list.get(i));
        }
        return min;
    }
    void inorder(TreeNode root, ArrayList<Integer> list ){
       if(root!=null){
        inorder(root.left,list);
         list.add(root.val);
       inorder(root.right,list);
       }
    }
}
// optimize one
class Solution {
         int prev= Integer.MAX_VALUE;
         int ans=  Integer.MAX_VALUE;
    public int getMinimumDifference(TreeNode root) {
         
         inorder(root);
         return ans;
    }
    void inorder(TreeNode root ){
       if(root!=null){
        inorder(root.left);
        ans=  Math.min(ans,Math.abs(root.val-prev));
        prev = root.val;
       inorder(root.right);
       }
    }
}
